import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder , StandardScaler
from sklearn.compose import ColumnTransformer 
from sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor,AdaBoostRegressor
from sklearn.metrics import mean_absolute_error ,mean_squared_error, r2_score,max_error


df=pd.read_csv('shopping_trends.csv')
df.head()

x=df.drop("Purchase Amount (USD)" ,axis=1)
y=df["Purchase Amount (USD)"]



x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25, random_state=43)

cat_feature = x.select_dtypes(include="object").columns
num_feature= x.select_dtypes(exclude="object").columns
OH=OneHotEncoder(drop="first")
scaler=StandardScaler()

preprocessor=ColumnTransformer(
    [
        ("oneHotencoding",OH,cat_feature),
        ("standard scaler",scaler,num_feature)
    ]
)

x_train=preprocessor.fit_transform(x_train)
x_test=preprocessor.transform(x_test)

models={
    "Randomforest Regressor":RandomForestRegressor(),
    "GradientBoost regressor":GradientBoostingRegressor(),
    "Adaboost regressor":AdaBoostRegressor()
}


i=int(input("enter the number of algorithm (0-2)"))

model= list(models.values())[i]
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

mae=mean_absolute_error(y_test,y_pred)
mse=mean_squared_error(y_test,y_pred)
score=r2_score(y_test,y_pred)
max=max_error(y_test,y_pred)

print(list(models.keys())[i])
print(f"{mae},\n{mse},\n{score},\n{max}")
